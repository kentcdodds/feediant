name: 🚀 Publish
on:
  push:
    branches:
      - main
      - dev
    tags:
      - 'v*'
  pull_request: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'npm'

      - name: 📥 Download deps
        run: npm ci

      - name: 🏄 Copy test env vars
        run: cp .env.example .env

      - name: 🛠 Setup Database
        run: npx prisma migrate deploy && npx prisma generate

      - name: 🔬 Lint
        run: npm run lint

  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'npm'

      - name: 📥 Download deps
        run: npm ci

      - name: 🏄 Copy test env vars
        run: cp .env.example .env

      - name: 🛠 Setup Database
        run: npx prisma migrate deploy && npx prisma generate

      - name: 🔎 Type check
        run: npm run typecheck --if-present

  vitest:
    name: ⚡ Vitest
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'npm'

      - name: 📥 Download deps
        run: npm ci

      - name: 🏄 Copy test env vars
        run: cp .env.example .env

      - name: 🛠 Setup Database
        run: npx prisma migrate deploy && npx prisma generate

      - name: ⚡ Run vitest
        run: npm run test -- --coverage

  publish:
    name: 🚀 Publish
    runs-on: ubuntu-latest
    needs: [lint, typecheck, vitest]
    # only build/publish on pushes
    if:
      ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' &&
      github.repository == 'kentcdodds/feediant' }}

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: '50'

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔑 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 📝 Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/feediant
          tags: |
            type=ref,event=branch
            type=sha,format=long
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=semver,pattern={{major}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: 🏗️ Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            COMMIT_SHA=${{ github.sha }}
